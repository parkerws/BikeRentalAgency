// <auto-generated />
using System;
using BikeRentalAgency.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BikeRentalAgency.Migrations
{
    [DbContext(typeof(BikeRentalContext))]
    [Migration("20200425225205_SeedDB1")]
    partial class SeedDB1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BikeRentalAgency.Models.Accessories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Accessory")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("BikeRentalAgency.Models.Bikes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Frame")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("OnHire")
                        .HasColumnType("bit");

                    b.Property<int?>("ReservationsId")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationsId");

                    b.ToTable("Bikes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Trek",
                            Frame = 1,
                            LocationId = 1,
                            OnHire = false,
                            type = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Mongoose",
                            Frame = 0,
                            LocationId = 3,
                            OnHire = false,
                            type = 2
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Raleigh",
                            Frame = 1,
                            LocationId = 1,
                            OnHire = false,
                            type = 4
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Diamondback",
                            Frame = 1,
                            LocationId = 4,
                            OnHire = false,
                            type = 0
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Specialized",
                            Frame = 2,
                            LocationId = 1,
                            OnHire = false,
                            type = 2
                        });
                });

            modelBuilder.Entity("BikeRentalAgency.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BikeRentalAgency.Models.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admin = true,
                            FirstName = "John",
                            LastName = "Smith",
                            LocationId = 2
                        },
                        new
                        {
                            Id = 2,
                            Admin = false,
                            FirstName = "Tyler",
                            LastName = "Johnson",
                            LocationId = 1
                        },
                        new
                        {
                            Id = 3,
                            Admin = false,
                            FirstName = "Banana",
                            LastName = "Backpack",
                            LocationId = 4
                        });
                });

            modelBuilder.Entity("BikeRentalAgency.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 North Street",
                            BranchEmail = "JaxBranch@KoolBikes.com",
                            City = "Jacksonville",
                            State = "NC",
                            Zip = 28542
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 South Street",
                            BranchEmail = "NewBern@KoolBikes.com",
                            City = "New Bern",
                            State = "NC",
                            Zip = 25343
                        },
                        new
                        {
                            Id = 3,
                            Address = "678 West Street",
                            BranchEmail = "Wilminton@KoolBikes.com",
                            City = "Wilmington",
                            State = "NC",
                            Zip = 24423
                        },
                        new
                        {
                            Id = 4,
                            Address = "234 East Street",
                            BranchEmail = "Raleigh@KoolBikes.com",
                            City = "Raleigh",
                            State = "NC",
                            Zip = 24242
                        },
                        new
                        {
                            Id = 5,
                            Address = "525 Center Street",
                            BranchEmail = "Emerald@KoolBikes.com",
                            City = "Emerald Isle",
                            State = "NC",
                            Zip = 26876
                        });
                });

            modelBuilder.Entity("BikeRentalAgency.Models.Reservations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BikeRentalAgency.Models.Bikes", b =>
                {
                    b.HasOne("BikeRentalAgency.Models.Reservations", null)
                        .WithMany("Bikes")
                        .HasForeignKey("ReservationsId");
                });
#pragma warning restore 612, 618
        }
    }
}
